# Ex.No: 10 Learning â€“ Use Supervised Learning  
### DATE:                                                                            
### REGISTER NUMBER : 
### AIM: 
To write a program to train the classifier for -----------------.
###  Algorithm:

### Program:
```py
import
numpy
as
np
import
pandas
as
pdpip install gradiopip install typing-extensions --upgradepip install --upgrade typing
import
gradio
as
gr
import
pandas
as
pd
data = pd.read_csv(
'diabetes.csv'
)data.head()
x = data.drop([
'Outcome'
], axis=
1
)y = data[
'Outcome'
]
print(x[:
5
])
from
sklearn.model_selection
import
train_test_splitx_train, x_test, y_train, y_test= train_test_split(x,y)
from
sklearn.preprocessing
import
StandardScalerscaler = StandardScaler()x_train_scaled = scaler.fit_transform(x_train)x_test_scaled = scaler.fit_transform(x_test)
from
sklearn.neural_network
import
MLPClassifiermodel = MLPClassifier(max_iter=
1000
, alpha=
1
)model.fit(x_train, y_train)print(
"Model Accuracy on training set:"
, model.score(x_train, y_train))print(
"Model Accuracy on Test Set:"
, model.score(x_test, y_test))print(data.columns)
def
diabetes
(Pregnancies, Glucose, Blood_Pressure, SkinThickness, Insulin, BMI,Diabetes_Pedigre
x = np.array([Pregnancies,Glucose,Blood_Pressure,SkinThickness,Insulin,BMI,Diabetes_Pedigre prediction = model.predict(x.reshape(
1
,
-1
))
if
(prediction==
0
):
return
"NO"
else
:
return
"YES"
```
### Output:
1.Dataset

![WhatsApp Image 2024-04-25 at 09 23 58_77b41ef5](https://github.com/kannan0071/AI_Lab_2023-24/assets/119641638/902fe083-c720-44c7-9118-d38f78aed76e)

2.Accuracy

![WhatsApp Image 2024-04-25 at 09 24 12_1d8641b3](https://github.com/kannan0071/AI_Lab_2023-24/assets/119641638/c3831e9b-d4ff-4f4a-877c-df8603faed09)

3.Result

![WhatsApp Image 2024-04-25 at 09 23 34_e1841a5d](https://github.com/kannan0071/AI_Lab_2023-24/assets/119641638/d376bb90-777a-4780-87e7-51168b7111a2)



### Result:
Thus the system was trained successfully and the prediction was carried out.
